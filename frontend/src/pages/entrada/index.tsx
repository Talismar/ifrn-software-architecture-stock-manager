import Header from "@/components/Header";
import { api } from "@/lib/axios";
import Head from "next/head";
import { FormEvent, useState } from "react";
import { toast } from "react-toastify";

export default function Register() {
  const [inputName, setInputName] = useState("");
  const [inputAmount, setInputAmount] = useState<number>(0);
  const [inputPrice, setInputPrice] = useState<number>(0);

  async function handleSubmit(event: FormEvent) {
    event.preventDefault();

    try {
      const response = await api.post("/product/", {
        name: inputName,
        amount: inputAmount,
        price: inputPrice,
      });

      if (response.status === 201) {
        toast.success("Produto cadastrado com sucesso!");
        setInputName("");
        setInputAmount(0);
        setInputPrice(0);
      }
    } catch (error) {
      console.error(error);
    }
  }

  return (
    <>
      <Head>
        <title>Stock Manager</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main>
        <section>
          <h1 className="text-2xl font-medium border-b-2 border-t-2 border-gray-300 py-4 mb-4">
            Entrada de produtos
          </h1>

          <form onSubmit={handleSubmit}>
            <section className="flex flex-col md:space-y-4 space-y-2">
              <label className="name space-y-2">
                <span className="name after:content-['*'] after:ml-0.5 after:text-red-500  text-sm font-medium text-slate-700">
                  Nome do produto
                </span>
                <input
                  type="text"
                  required
                  value={inputName}
                  onChange={(e) => setInputName(e.target.value)}
                  className="mt-1 name w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400
                          focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500
                          disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none
                          invalid:border-pink-500 invalid:text-pink-600
                          focus:invalid:border-pink-500 focus:invalid:ring-pink-500
                          
                          "
                />
              </label>

              <label className="amount space-y-2">
                <span className="amount after:content-['*'] after:ml-0.5 after:text-red-500  text-sm font-medium text-slate-700">
                  Quantidade do produto
                </span>
                <input
                  type="number"
                  required
                  min="1"
                  value={inputAmount}
                  onChange={(e) => setInputAmount(Number(e.target.value))}
                  className="mt-1 amount w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400
                          focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500
                          disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none
                          invalid:border-pink-500 invalid:text-pink-600
                          focus:invalid:border-pink-500 focus:invalid:ring-pink-500
                          "
                />
              </label>

              <label className="price space-y-2">
                <span className="price after:content-['*'] after:ml-0.5 after:text-red-500  text-sm font-medium text-slate-700">
                  Pre√ßo do produto
                </span>
                <input
                  type="number"
                  step="any"
                  required
                  min="0"
                  value={inputPrice}
                  onChange={(e) => setInputPrice(Number(e.target.value))}
                  className="mt-1 price w-full px-3 py-2 bg-white border border-slate-300 rounded-md text-sm shadow-sm placeholder-slate-400
                          focus:outline-none focus:border-sky-500 focus:ring-1 focus:ring-sky-500
                          disabled:bg-slate-50 disabled:text-slate-500 disabled:border-slate-200 disabled:shadow-none
                          invalid:border-pink-500 invalid:text-pink-600
                          focus:invalid:border-pink-500 focus:invalid:ring-pink-500
                          "
                />
              </label>
            </section>

            <button
              type="submit"
              className="bg-sky-500 py-2 rounded-md font-semibold text-white mt-8 w-full"
            >
              Cadastrar
            </button>
          </form>
        </section>
      </main>
    </>
  );
}
